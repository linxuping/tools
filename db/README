hi,同学们:
    还记得在管理系统开发过程中，每次update代码，涉及到数据库变更的时候，我们都要痛苦地整理环境么？
    为了方便日常开发以及后续线上的数据库表更新，现在我们来制定一些约定，每次更新代码后，让脚本自动来完成数据库表的表更，同时保留历史（测试）数据：
    1、在salmon-4.0 目录下新增了一个alterDB 的子目录，里面暂时有两个文件：alterDB.py 、salmon-4.0.sql 。其中，alterDB.py 是用来自动完成数据库表变更的脚本，salmon-4.0.sql 是现在试运行环境的初始化数据，也就是salmon-4.0  svn version 1631版的数据库表结构加上初始化数据。
 
    2、对于alterDB 目录里的所有 *.sql文件，一旦提交后，原则上均不能做出修改（除非导致BUG）。当数据库表发生变更时，应该新增一个用于修改库表的sql语句的文件，该文件的命名规则是：salmon_alter_vXXX.sql，其中"almon_alter_v"为固定前缀，".sql"为固定后缀，"XXX"是提交代码后从svn得到的svn版本号。即当需要修改数据库表结构时，像以往那样提交完代码后，需到alterDB 目录里新增一个salmon_alter_vXXX.sql的文件（用于更新数据库表结构或数据等）并提交。
    希望大家能够遵守以上约定，方便自己方便他人。
 
附：
alterDB.py 脚本参数说明：
Usage: python alterDB.py [-b] [-s] [-e] [-v] 
-v:  打印当前脚本版本号并退出
-b： 先drop database（如果存在的话），然后用当前目录下 salmon-XXX.sql（其中XXX为-b选项的参数）文件去初始化数据库。
     当省略该参数时，默认为"4.0"，此时若-s、-e参数同时省略，则先drop database，然后用salmon-4.0.sql 的内容去初始化数据库，
     接着按照项目SVN 版本号从小到大依次执行所有的salmon_alter_vXXX.sql文件以更新数据库表。
     若指定了该参数，而忽略-s参数，则只用指定的salmon-XXX.sql 的内容去初始化数据库。
-s： 按照项目SVN 版本号从小到大依次执行所有的salmon_alter_vXXX.sql文件以更新数据库表的开始版本号。在忽略该参数的情况下，
     若没有指定-b参数，则优先从当前目录".curVersion"文件读取，读取成功时则取该文件中的版本作为起始版本；否则，默认没有起始版本限制
-e:  按照项目SVN 版本号从小到大依次执行所有的salmon_alter_vXXX.sql文件以更新数据库表的结束版本号。
     在忽略该参数的情况下，默认没有结束版本限制
 
其他说明：
脚本在运行过程中，会在当前目录产生两个临时文件："salmon_db_back.sql" 、".curVersion "。其中，"salmon_db_back.sql" 是脚本开始执行修改库表操作前对当前的库表数据备份的文件，在修改库表过程中，如果发生错误，会自动用该文件的数据回滚；".curVersion "用于记录本次操作中最后执行的salmon_alter_vXXX.sql文件名中的变量XXX。
 
一般情况下，我们只需在alterDB目录中执行python alterDB.py 即可。
